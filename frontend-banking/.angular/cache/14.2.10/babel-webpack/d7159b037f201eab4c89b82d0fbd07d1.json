{"ast":null,"code":"import _asyncToGenerator from \"C:/xampp/htdocs/frontend-accounting/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nexport class UsersService {\n  constructor(route, router, _http) {\n    this.route = route;\n    this.router = router;\n    this._http = _http;\n  }\n\n  getBalance(accountid) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      console.log(\"logging calling\");\n      let balance = 0; // console.log(this.login.value);\n\n      yield _this._http.get(`http://localhost:3000/users/${accountid}`).subscribe(res => {\n        console.log(\"gettting balance :\" + res.balance); // console.log(res);\n        // let user = res;\n        // user = JSON.parse(user);\n\n        balance = res.balance;\n      }, err => {\n        return 0;\n        alert('Something was wrong');\n      });\n      return balance;\n    })();\n  }\n\n  logindata(userid) {\n    console.log(\"logging calling\"); // // console.log(this.login.value);\n    //  this._http.get<any>(\"http://localhost:3000/balance\")\n    //  .subscribe(res=>{\n    //    const user = res.find((a:any)=>{\n    //      return a.username === this.login.value.username && a.password === this.login.value.password\n    //    });\n    //    if(user){\n    //     localStorage.setItem(\"user\", JSON.stringify(user));\n    //      alert('you are successfully login');\n    //      this.login.reset();\n    //    //  $('.form-box').css('display','none');\n    //      this.router.navigate(['dashboard']);\n    //    }else{\n    //      alert('User Not Found');\n    //      this.router.navigate(['login']);\n    //    }\n    //  }, err=>{\n    //    alert('Something was wrong');\n    //  })\n  }\n\n}\n\nUsersService.ɵfac = function UsersService_Factory(t) {\n  return new (t || UsersService)(i0.ɵɵinject(i1.ActivatedRoute), i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient));\n};\n\nUsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsersService,\n  factory: UsersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AAOA,OAAM,MAAOA,YAAP,CAAmB;EAEvBC,YACUC,KADV,EAEUC,MAFV,EAGUC,KAHV,EAG2B;IAFjB;IACA;IACA;EACL;;EAEAC,UAAU,CAACC,SAAD,EAAiB;IAAA;;IAAA;MAC9BC,OAAO,CAACC,GAAR,CAAY,iBAAZ;MACA,IAAIC,OAAO,GAAG,CAAd,CAF8B,CAI9B;;MACD,MAAO,KAAI,CAACL,KAAL,CAAWM,GAAX,CAAoB,+BAA+BJ,SAAS,EAA5D,EACJK,SADI,CACMC,GAAG,IAAE;QACfL,OAAO,CAACC,GAAR,CAAY,uBAAsBI,GAAG,CAACH,OAAtC,EADe,CAGf;QACA;QACA;;QAEAA,OAAO,GAAGG,GAAG,CAACH,OAAd;MAGA,CAXI,EAWFI,GAAG,IAAE;QACP,OAAO,CAAP;QACCC,KAAK,CAAC,qBAAD,CAAL;MACD,CAdI,CAAP;MAeC,OAAOL,OAAP;IApB8B;EAqB9B;;EAEFM,SAAS,CAACC,MAAD,EAAW;IAClBT,OAAO,CAACC,GAAR,CAAY,iBAAZ,EADkB,CAGlB;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;EACA;;AAvDqB;;;mBAAZR,cAAYiB;AAAA;;;SAAZjB;EAAYkB,SAAZlB,YAAY;EAAAmB,YAFX","names":["UsersService","constructor","route","router","_http","getBalance","accountid","console","log","balance","get","subscribe","res","err","alert","logindata","userid","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\frontend-accounting\\src\\services\\users.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private _http: HttpClient\n  ) { }\n\n async getBalance(accountid:number):Promise<number>{\n    console.log(\"logging calling\");\n    let balance = 0;\n\n    // console.log(this.login.value);\n   await  this._http.get<any>(`http://localhost:3000/users/${accountid}`)\n     .subscribe(res=>{\n      console.log(\"gettting balance :\"+ res.balance);\n\n      // console.log(res);\n      // let user = res;\n      // user = JSON.parse(user);\n\n      balance = res.balance;\n\n\n     }, err=>{\n      return 0;\n       alert('Something was wrong');\n     })\n    return balance;\n   }\n\n  logindata(userid:any){\n    console.log(\"logging calling\");\n\n    // // console.log(this.login.value);\n    //  this._http.get<any>(\"http://localhost:3000/balance\")\n    //  .subscribe(res=>{\n    //    const user = res.find((a:any)=>{\n    //      return a.username === this.login.value.username && a.password === this.login.value.password\n    //    });\n\n    //    if(user){\n    //     localStorage.setItem(\"user\", JSON.stringify(user));\n    //      alert('you are successfully login');\n    //      this.login.reset();\n    //    //  $('.form-box').css('display','none');\n    //      this.router.navigate(['dashboard']);\n    //    }else{\n    //      alert('User Not Found');\n    //      this.router.navigate(['login']);\n    //    }\n\n    //  }, err=>{\n    //    alert('Something was wrong');\n    //  })\n   }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}